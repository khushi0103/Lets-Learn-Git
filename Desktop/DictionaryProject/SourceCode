from tkinter import *
from PIL import Image,ImageTk
import json
from difflib import get_close_matches      #this function is simply return the closest
from tkinter import messagebox             # good enough matching word of the list
import pyttsx3                             #text to speech conversion module

engine=pyttsx3.init()                      #creating instance of engine class

voice=engine.getProperty('voices')
engine.setProperty('voice',voice[0].id)


 # Functionality part

def search():
   data =json.load(open('data.json'))
   word =enterwordEntry.get()
   word=word.lower()
   if word in data:
      meaning=data[word]
      print(meaning)
      textarea.delete(1.0,END)
      for item in meaning:
        textarea.insert(END,u'\u2022'+item+'\n\n')


   elif len(get_close_matches(word,data.keys()))>0:
     close_match=get_close_matches(word,data.keys())[0]
     res = messagebox.askyesno('Confirm','Did you mean '+close_match+' instead?')
     if res==True:
         enterwordEntry.delete(0,END)
         enterwordEntry.insert(END,close_match)
         meaning=data[close_match]

         textarea.delete(1.0,END)
         for item in meaning:
           textarea.insert(END, u'\u2022' + item + '\n\n')

     else:
         messagebox.showerror('Error','The word doesnt exist,Please double check it.')
         enterwordEntry.delete(0,END)
         textarea.delete(1.0,END)

   else:
         messagebox.showinfo('Information','The word doesnt exit')
         enterwordEntry.delete(0,END)
         textarea.delete(1.0,END)


def clear():
    enterwordEntry.delete(0,END)
    textarea.delete(1.0,END)


def exit():
    res=messagebox.askyesno('Confirm','Do you want to exit?')
    if res==True:
        root.destroy()
    else:
        pass

def wordaudio():
    engine.say(enterwordEntry.get())
    engine.runAndWait()

def meaningaudio():
    engine.say(textarea.get(1.0,END))
    engine.runAndWait()


 ######  GUI part
root=Tk()

root.geometry("1040x670+100+5")    #for setting width and height

root.title("Talking Dictionary")

root.resizable(0,0)     #for not changing the size of window

image1 = Image.open("bg.png")
photo1=ImageTk.PhotoImage(image1)       #import images to main.py file
bgLabel=Label(image=photo1)
bgLabel.pack()

#create Enter Word
enterwordLabel=Label(root,text='Enter Word',font=('castellar',29,'bold'),fg='red3',bg='whitesmoke')
enterwordLabel.place(x=530,y=20)

enterwordEntry=Entry(root,font=('arial',23,'bold'),justify=CENTER,bd=8,relief=GROOVE)#place cursor at center
enterwordEntry.place(x=510,y=80)

searchimage = Image.open("search.png")
photo2=ImageTk.PhotoImage(searchimage)
searchButton=Button(root,image=photo2,bd=0,bg='whitesmoke',cursor='hand2',activebackground='whitesmoke'
                   ,command=search)
searchButton.place(x=620,y=150)

micImage = Image.open("mic.png")
photo3=ImageTk.PhotoImage(micImage)
micButton=Button(root,image=photo3,bd=0,bg='whitesmoke',cursor='hand2',activebackground='whitesmoke',
                 command=wordaudio)
micButton.place(x=710,y=153)

#create meaning

meaningLabel=Label(root,text='Meaning',font=('castellar',29,'bold'),fg='red3',bg='whitesmoke')
meaningLabel.place(x=580,y=240)

textarea=Text(root,width=39,height=8,font=('arial',18,'bold'),bd=8,relief=GROOVE)
textarea.place(x=440,y=300)

audioImage = Image.open("microphone.png")
photo4 = ImageTk.PhotoImage(audioImage)
audioButton=Button(root,image=photo4,bd=0,bg='whitesmoke',cursor='hand2',activebackground='whitesmoke',
                   command=meaningaudio)
audioButton.place(x=535,y=563)


clearImage = Image.open("clear.png")
photo5 = ImageTk.PhotoImage(clearImage)
clearButton=Button(root,image=photo5,bd=0,bg='whitesmoke',cursor='hand2',activebackground='whitesmoke',
                   command=clear)
clearButton.place(x=660,y=563)

exitImage = Image.open("exit.png")
photo6 = ImageTk.PhotoImage(exitImage)
exitButton=Button(root,image=photo6,bd=0,bg='whitesmoke',cursor='hand2',activebackground='whitesmoke',
                  command=exit)
exitButton.place(x=790,y=563)

root.mainloop()